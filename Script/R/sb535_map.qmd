---
title: "Visualizing Non-Overlapping Disadvantaged Census Tracts: Bolstering CalEnviroScreen Considerations"
author: "Sofia Ingersoll"
format:
  html:
    code-fold: true
    code-summary: "View the code"
embedded-sources: true
output:
  html_document:
    print_df: paged
    toc: yes
    toc_depth: 4
    toc_float: yes
---

```{r set-up, message = FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = TRUE)

library(sf)
library(tmap)
library(here)
library(terra)
library(tidyverse)
library(leaflet)
library(tmaptools)
library(osmextract) 
library(RColorBrewer)
```


# Read & Plot CalEnviroScreen Data
```{r read_n_wrangle_calenviro}
calenviro <- st_read(here("data","CalEnviroScreen","CES4 Final Shapefile.shp"),
                     quiet = TRUE) %>% 
  janitor::clean_names() 

# housing burden is a good parameter to visualize
# let's get an idea of the bin distribution for plotting
#range(calenviro$hous_burd)

# remove the -999.0, that's an NA
calenviro <- calenviro %>% 
  filter(hous_burd != -999.0) %>% 
  st_transform(4326) %>% 
  st_make_valid()

# check! nice!
#range(calenviro$hous_burd)
```
```{r eval = FALSE}
#colnames(calenviro)
```

```{r calenviro_only, eval = FALSE}
# we'll break housing burden into quantiles
bins <- seq(0, 100, by = 25)

tmap_mode('view')

tm_shape(calenviro) +
  
  tm_basemap(leaflet::providers$OpenStreetMap) +
  
  tm_polygons(col = 'hous_burd',
              palette = 'plasma',
              style = 'fixed',
              breaks = bins) 
```


### Overlaying Data to Identify Non-Overlapping CA Census Tracts


```{r read_n_wrangle_sb535}
# sb535 xlsx sheet
# inspecting the tribal data provided on tab 3, there is no geolocation information
# so unfortunately these can't be plotted 

# Define the path to your Excel file
sb535_path <- here("data", "SB535_disadv_communities", "SB535DACresultsdatadictionary_F_2022.xlsx")

# Get the names of all sheets in the Excel file
sheet_names <- readxl::excel_sheets(sb535_path)

# Print sheet names to verify and select the correct one
#print(sheet_names)

# Read the fourth sheet directly by its name or index
sb535_tract_data <- readxl::read_xlsx(sb535_path, sheet = sheet_names[4]) %>% 
  janitor::clean_names() %>%
  as.data.frame() %>% 
  rename(tract = census_tract)

#sb535_tract_data
```


```{r parsing_sb535, eval = FALSE}
# let's isolate data of interest
# noting that the last sheet being added only contains data for tracts and not tribal areas
sb535_path <- here("data","SB535_disadv_communities","SB535DACresultsdatadictionary_F_2022.xlsx")

sb535_sheetnames <- readxl::excel_sheets(sb535_path)

# we're making a list of df here of our sheets
pull_sheets <- function(raw_data_path, sheet_names) {
  sheet_list <- list()
  for (sheet in sheet_names[2:4]) {
    sheet_data <- readxl::read_xlsx(raw_data_path, sheet = sheet) %>%
      janitor::clean_names()
    sheet_list[[sheet]] <- sheet_data
  }
  return(sheet_list)
}

# pull sheets 2 to 4 into a list of data frames
sb535_list <- pull_sheets(sb535_path, sb535_sheetnames)

# then combining the list into a df
sb535 <- bind_rows(sb535_list) %>% 
  as.data.frame()

# sb535
```

```{r eval = FALSE}
#colnames(sb535)
```

```{r eval = FALSE}
# housing burden is a good parameter to visualize
# let's get an idea of the bin distribution for plotting
#range(sb535_tract_data$housing_burden)

# remove the -999.0, that's an NA
sb535_tract_data <- sb535_tract_data %>% 
  
  mutate(housing_burden = as.numeric(housing_burden)) %>% 
  
  filter(!is.na(housing_burden))

# check! nice!
#range(sb535_tract_data$housing_burden)
```

```{r sb535_sf}
# make a geo object
sb535_geo <- sb535_tract_data %>% 
  
  filter(!is.na(longitude) & !is.na(latitude)) %>% 
  
  st_as_sf(coords = c('longitude', "latitude"),
                      crs = 4326) %>% 
  st_make_valid()
```

```{r  eval = FALSE}
# we'll break housing burden into quantiles
bins <- seq(0, 100, by = 25)

tmap_mode('view')

tm_shape(sb535_geo) +
  
  tm_basemap(leaflet::providers$OpenStreetMap) +
  
  tm_symbols(col = 'housing_burden',
             palette = 'plasma',
             style = 'fixed',
             breaks = bins,
             size = 5,
             alpha = 0.5) 
```

**notes**
* Very weird, but the two are only plotting correctly when they have different crs. Fundamentally they should not plot together when they have different CRS, but they are?

```{r sb535_map}
# we'll break housing burden into quantiles
bins <- seq(0, 100, by = 25)

# i want a map will all the data layered for for selection against calenviro
tmap_mode(mode = "view")

overlayed_map <- tm_shape(calenviro) +
  
  tm_basemap(leaflet::providers$OpenStreetMap) +
  
  tm_polygons(col = 'hous_burd',
              palette = 'plasma',
              style = 'fixed',
              breaks = bins,
              title = "Housing Burden") +
  
  tm_shape(sb535_geo) +
  
  # areas with overlap are made to be white,
  # as to "white out" areas not of interest  
  # the only visible regions are where the data do no overlap 
  tm_bubbles(size = .5,
             alpha = 0.5,
             border.col = 'white',
             style = 'fixed',
             breaks = bins
             ) +
  
  tm_scale_bar() +
  
  tm_layout(title = "Visualizing the Overlap of CalEnviroScreen and SB 535: \\n Highlighting the Housing Burden & Identifying Non-Overlapping Census Tracts",
            title.size = 1.5,
            main.title.position = c("center", "top"),
            legend.title.size = 0.8,
            legend.text.size = 0.7) +
  
  tmap_options(check.and.fix = TRUE) 


tmap_save(overlayed_map, here("Deliverables","interactive_maps","overlayed_maps","overlayed_map_sb535.html"))
```


# Isolate Non-overlapping Tracts

Quality Check:

So the sb535 data has 2310 observations that we can map. 
I believe I could bolster this using an additional data set specifically for CA census tract geometries.

When disjoining the data, we expect observations to decrease because our original map had a lot of overlap in the central valley.
A decrease of 4 observations were removed which is a little confusing comparing to the previous map.
```{r}
plot(st_geometry(sb535_geo))
plot(st_geometry(calenviro), add = TRUE)
```

```{r sb535_disjoint_data}
# instead of a sgbp the output
# let's make it a vector,
# this only contains boolean responses for the question we asked above 
st_crs(sb535_geo) == st_crs(calenviro)

no_overlap_vector_sb535 <- st_disjoint(sb535_geo, calenviro, sparse = FALSE)[, 1]

#plot(no_overlap_vector_sb535)

#no_overlap_vector_sb535

# subset the calenviro data based on disjoint indices
# now we will only have geoloc data for areas that do not overlap with calenviro
sb535_disjoint <- sb535_geo[no_overlap_vector_sb535, ]

# this is better, we're seeing a drop from 8041 observations to 8034 observations
#sb535_disjoint
```