---
title: "Identifying Reoccuring CA Census Tracts/ Block Groups in EJ Screening Data"
author: "Sofia Ingersoll"
format:
  html:
    code-fold: true
    code-summary: "View the code"
embedded-sources: true
output:
  html_document:
    print_df: paged
    toc: yes
    toc_depth: 4
    toc_float: yes
---

Deliverable: A simple csv file with all 9200 or so CA census tracts + a column for each listing whether or not they are in each of the different screeners.

Outline:

- Subset datasets to only contain the census_tract information. Standardize the column names and tract format, keeping unique census tracts (no need to repeat)
- Combine subsets and add indicator columns for each of the datasets
- Identify reoccuring census tracts and mark them as 1 for yes and 0 for no. 

( let's start with the 7 and build to 28 )

```{r set_up, message = FALSE}
library(sf)
library(here)
library(readr)
library(readxl)
library(tidyverse)
```


# Read & Wrangle Data
Here we will standardize and subset the data
```{r read_n_wrangle_data}
#~~~~~~~~~~~~~~~~~~~~~~~~
# ---- calenviroscreen ---- 
#~~~~~~~~~~~~~~~~~~~~~~~~
# read data and set crs
calenviro <- st_read(here("data","CalEnviroScreen","CES4 Final Shapefile.shp"),
                  quiet = TRUE) %>% 
  janitor::clean_names() %>% 
  # not all files have geometry, so it's not necessary atm
  st_drop_geometry()
#  st_transform(crs = 4326) %>% 
 # st_make_valid()

# subset 
calenviro <- calenviro %>% 
  select(tract) %>% 
  rename(census_tract = tract) %>% 
  distinct(census_tract) %>% 
  mutate(census_tract = as.numeric(census_tract))

# 8035 obs
#calenviro
#~~~~~~~~~~~~~~~~~~~~~~~~
# ----  sb535 data   ----
#~~~~~~~~~~~~~~~~~~~~~~~~
# path to your Excel file
sb535_path <- here("data", "SB535_disadv_communities", "SB535DACresultsdatadictionary_F_2022.xlsx")

# names of all sheets in the Excel file
sheet_names <- readxl::excel_sheets(sb535_path)

# read the fourth sheet directly by its index
sb535 <- readxl::read_xlsx(sb535_path, sheet = sheet_names[4]) %>% 
  janitor::clean_names() %>%
  as.data.frame() %>% 
  select(census_tract) %>%   
  distinct(census_tract) %>% 
  mutate(census_tract = as.numeric(census_tract))

# 2310 obs
#sb535
#~~~~~~~~~~~~~~~~~~~~~~~~
# ----  sd cei data  ----
#~~~~~~~~~~~~~~~~~~~~~~~~
# read data and set crs
sd_cei <- st_read(here("data","sd_climate_equity_index","City_of_San_Diego_CEI_2021_Revision.shp"),
                  quiet = TRUE) %>% 
  janitor::clean_names() %>% 
  # not all files have geometry, so it's not necessary atm
  st_drop_geometry()
#  st_transform(crs = 4326) %>% 
 # st_make_valid()
 
# subset 
sd_cei <- sd_cei %>% 
  select(tract) %>% 
  rename(census_tract = tract) %>% 
  distinct(census_tract) %>% 
  mutate(census_tract = as.numeric(census_tract))

# 297 obs
#sd_cei
#~~~~~~~~~~~~~~~~~~~~~~~~
# ----  white house  ----
#~~~~~~~~~~~~~~~~~~~~~~~~
# read data 
white_house <- st_read(here("data", "white_house_map","usa","usa.shp"),
                       quiet = TRUE) %>% 
  janitor::clean_names() 

# subset and set crs 
white_house <- white_house %>% 
  filter(sf == "California") %>% 
  select(geoid10) %>% 
  rename(census_tract = geoid10) %>% 
  # not all files have geometry, so it's not necessary atm
  st_drop_geometry() %>% 
  distinct(census_tract) %>% 
  mutate(census_tract = as.numeric(census_tract)) 
#  st_transform(crs = 4326) %>% 
 # st_make_valid()

# 8057 obs
#white_house
#~~~~~~~~~~~~~~~~~~~~~~~~
# ----    doe ejmt   ----
#~~~~~~~~~~~~~~~~~~~~~~~~
# read data 
doe_ejmt <- st_read(here("data", "DOE_EJ_mapping_tool", "DAC Shapefiles (v2022c).shp"), 
                    quiet = TRUE) %>% 
            janitor::clean_names()

# subset and set crs 
doe_ejmt <- doe_ejmt %>% filter(stateabb == "CA") %>% 
  select(geoid) %>% 
  rename(census_tract = geoid) %>% 
  # not all files have geometry, so it's not necessary atm
  st_drop_geometry() %>% 
  distinct(census_tract) %>% 
  mutate(census_tract = as.numeric(census_tract))
#  st_transform(crs = 4326) %>% 
 # st_make_valid()

# 8057 obs
#doe_ejmt
#~~~~~~~~~~~~~~~~~~~~~~~~
# ----    cdc svi    ----
#~~~~~~~~~~~~~~~~~~~~~~~~
cdc_svi <- read_csv(here("data", "CDC_Index", "California_SVI.csv"),
                    show_col_types = FALSE) %>% 
  janitor::clean_names() %>% 
  select(fips) %>% 
  rename(census_tract = fips) %>% 
  distinct(census_tract) %>% 
  mutate(census_tract = as.numeric(census_tract))

# 9109 obs
#cdc_svi
#~~~~~~~~~~~~~~~~~~~~~~~~
# ----     cdc ej    ----
#~~~~~~~~~~~~~~~~~~~~~~~~
cdc_ej <- read_csv(here("data", "CDC_Index", "California_EJ.csv"),
                    show_col_types = FALSE) %>% 
  janitor::clean_names() %>% 
  select(geoid) %>% 
  rename(census_tract = geoid) %>% 
  distinct(census_tract) %>% 
  mutate(census_tract = as.numeric(census_tract))

# 8041 obs
#cdc_ej

#~~~~~~~~~~~~~~~~~~~~~~~~
# ----   ejscreen    ----
#~~~~~~~~~~~~~~~~~~~~~~~~
ejscreen <- read_csv(here("data", "EJSCREEN_2023_Tracts_StatePct_with_AS_CNMI_GU_VI.csv"),
                    show_col_types = FALSE) %>% 
  janitor::clean_names() %>% 
  filter(state_name == "California") %>% 
  mutate(census_tract = as.numeric(id)) %>% 
  select(census_tract) 
  
# 9129 obs
#ejscreen
```


# Combining the Data & Identifying Census Tract Presence in Each Screener

Confused and concerned why there is roughly double the expected amount of census tracts, 10305 observations. My suspicion as that block_groups have been labeled as census_tracts. In the state of CA there are 8,057 census tracts and 23,212 block groups according to [Census.gov](https://www.google.com/url?sa=t&source=web&rct=j&opi=89978449&url=https://www2.census.gov/geo/pdfs/reference/guidestloc/ca_gslcg.pdf&ved=2ahUKEwiT64uW9r2HAxX3HkQIHRWYJokQFnoECBQQAw&usg=AOvVaw3Pi1uHjRRtCnaI1nvFGTTK). 

```{r  combining_n_indicating}
# list of dataframes and their corresponding indicator column names
data_list <- list(
  calenviro = calenviro,
  sb535 = sb535,
  sd_cei = sd_cei,
  white_house = white_house,
  doe_ejmt = doe_ejmt,
  cdc_svi = cdc_svi,
  cdc_ej = cdc_ej,
  ejscreen = ejscreen
)

# combined dataframe with all census tracts
# creating a base dataframe with all unique census tracts
# confused and concerned why there is more than the expected amount of census tracts 8057
# 10305 observations 
combined_df <- bind_rows(data_list) %>%
  distinct(census_tract) %>%
  arrange(census_tract) %>%
  # all columns are numeric
  mutate(across(everything(), as.numeric))

# Function to add indicator columns based on intersections
add_indicator_column <- function(base_df, df_to_check, column_name) {
  indicator_df <- df_to_check %>%
    # create a column with this name and assign all values to be 1
    mutate(!!column_name := 1) %>%
    # save those two columns
    select(census_tract, !!column_name)
  
  base_df %>%
    left_join(indicator_df, by = "census_tract") %>%
    # now anywhere the census tract did not appear, assign a 0 
    mutate(!!column_name := replace_na(!!sym(column_name), 0))
}

# apply this function to each dataset and update combined_df iteratively
for (dataset_name in names(data_list)) {
  # check if column already exists in combined_df to avoid overwriting
  if (dataset_name %in% names(combined_df)) {
    combined_df <- combined_df %>%
      # ensure existing columns are preserved
      mutate(!!dataset_name := replace_na(!!sym(dataset_name), 0))  
  }
  
  combined_df <- add_indicator_column(combined_df, data_list[[dataset_name]], dataset_name)
}

# quick checks
head(combined_df, 6)

#unique(combined_df$calenviro)
#unique(combined_df$sb535)
#unique(combined_df$sd_cei)
#unique(combined_df$white_house)
#unique(combined_df$doe_ejmt)
#unique(combined_df$cdc_svi)
#unique(combined_df$cdc_ej)

combined_df <-  combined_df %>% 
  # rename more appropriately
  rename(census_block_group = census_tract)

# save the final combined dataframe as a CSV file
write_csv(combined_df, here("Deliverables", "combined_census_tracts_screeners.csv"))

# print a message indicating success
print("Combined data saved as 'combined_census_tracts_screeners.csv'")
```

# Expanding to Include Climate Vulnerability Metric Indicators

