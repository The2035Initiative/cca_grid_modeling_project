---
title: "Visualizing Non-Overlapping Disadvantaged Census Tracts: Bolstering CalEnviroScreen Considerations"
author: "Sofia Ingersoll"
format:
  html:
    code-fold: true
    code-summary: "View the code"
embedded-sources: true
output:
  html_document:
    print_df: paged
    toc: yes
    toc_depth: 4
    toc_float: yes
---

```{r set-up, message = FALSE}
library(sf)
#library(sp)
library(tmap)
library(here)
library(stars)
library(terra)
library(raster)
library(maptiles)
library(tidyverse)
library(leaflet)
#library(sfheaders)
#library(ggspatial)
library(tmaptools)
library(osmextract) 
library(RColorBrewer)
```


# Read CalEnviroScreen Data
```{r read_n_wrangle_calenviro}
calenviro <- st_read(here("data","CalEnviroScreen","CES4 Final Shapefile.shp")) %>% 
  janitor::clean_names() %>% 
  st_make_valid()

# housing burden is a good parameter to visualize
# let's get an idea of the bin distribution for plotting
range(calenviro$hous_burd)

# remove the -999.0, that's an NA
calenviro <- calenviro %>% 
  filter(hous_burd != -999.0)

# check! nice!
range(calenviro$hous_burd)

calenviro <- st_transform(calenviro,
                          4326) %>% 
  st_make_valid()

head(calenviro, 1)
```
```{r read_n_wrangle_ac}
# path to read in raw data
ac_path <- here("data","Climate_Vulnerability_Metric_Indicators","BRACE_AirConditioning_797_CO_RE_CA.xlsx")

# Get the names of all sheets in the Excel file
sheet_names <- readxl::excel_sheets(ac_path)

sheet_names

# Read the second sheet directly by its name or index
ac_tract_data <- readxl::read_xlsx(ac_path, sheet = sheet_names[2]) %>% 
  janitor::clean_names() %>%
  as.data.frame()

ac_tract_data

# let's remove the NA and use county 
# the observations dropped from 79 to 58
ac_tract_data <- ac_tract_data %>% 
  filter(!is.na(county_name)) %>% 
  mutate(county = county_name,
         tract = as.double(county_fips))

# quick peak to check
#head(ac_tract_data, 3)

# i want to add geometry to the 58 observations so this output should only have 58
#ac_tract_data <- inner_join(ac_tract_data, calenviro,  by =  "county")

ac_tract_data
```

```{r}
setdiff(colnames(calenviro), colnames(ac_geo))
colnames(calenviro)
colnames(ac_geo)

unique(calenviro$county) == unique(ac_geo$county)


length(unique(calenviro$county))
length(unique(ac_geo$county))


# i want to add geometry to the 58 observations so this output should only have 58
ac_join <- left_join(ac_tract_data, calenviro,  by =  c("county", "tract"))

# let's make it a spatial object for mapping now
ac_test <- st_as_sf(ac_join, sf_column_name = "geometry" ) %>% 
  st_transform(crs = 4326) %>% 
  st_make_valid()

ac_join_2 <- st_join(ac_test, calenviro) 


ac_join_2

# let's make it a spatial object for mapping now
ac_geo <- st_as_sf(ac_join, sf_column_name = "geometry" ) %>% 
  st_transform(crs = 4326) %>% 
  st_make_valid()

# fix geometries
ac_geo <- ac_geo[!st_is_empty(ac_geo), ]

# quick peak to check
head(ac_geo, 3) 
```

```{r}
# Perform the left join using st_join
calenviro_sf <- calenviro %>%
  select(geometry, county, tract) # Ensure these columns exist

# Check for valid geometries before join
calenviro_sf <- calenviro_sf %>%
  st_make_valid() %>%
  filter(!st_is_empty(.))

# Perform the spatial join
ac_geo <- st_join(calenviro_sf, ac_join_2, by = c("county", "tract"))

# Check if join operation was successful
print(nrow(ac_geo))

# Transform CRS
ac_geo <- st_transform(ac_geo, crs = 3857) %>% 
  st_make_valid()

# Remove empty geometries
ac_geo <- ac_geo[!st_is_empty(ac_geo), ]
```


```{r}
plot(ac_geo)
```

```{r ac_map}
# we'll break housing burden into quantiles
bins <- seq(0, 100, by = 25)

# i want a map will all the data layered for for selection against calenviro
tmap_mode(mode = "view")

tm_shape(calenviro) +
  
  tm_basemap(leaflet::providers$OpenStreetMap) +
  
  tm_polygons(col = 'hous_burd',
              palette = 'plasma',
              style = 'fixed',
              breaks = bins) +
  
  tm_shape(ac_join) +
  
  # areas with overlap are made to be white,
  # as to "white out" areas not of interest  
  # the only visible regions are where the data do no overlap 
  tm_polygons(size = .1,
             alpha = 0.5,
             palette = "plasma",
             border.col = 'white'
             ) 
```

# TIGER/Line CA Census Shapefile
 
[Meta Data]("https://www2.census.gov/geo/tiger/TIGER2023/2023_TL_Shapefiles_File_Name_Definitions.pdf")
[More Data Info]('https://www.census.gov/geographies/mapping-files/time-series/geo/tiger-line-file.html')
[Download it here]("https://www2.census.gov/geo/tiger/TIGER2023/STATE/")

```{r ca_tigerfile}
# load in shapefile for usa
usa <- st_read(here("data","tl_2023_us_state", "tl_2023_us_state.shp")) %>% 
  janitor::clean_names()

#str(usa)

# filter for ca
ca <- usa %>% 
  filter(name == "California")

str(ca)  
colnames(ca)

ca <- st_transform(ca,
                4326) %>% 
  st_make_valid()

plot(ca)
```
```{r joing_ca_tl}
str(ac_tract_data)

ca_ac <- inner_join(ac_tract_data, ca, by = )

```

